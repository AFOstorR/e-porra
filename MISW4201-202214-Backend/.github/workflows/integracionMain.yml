name: Integracion continua proyecto E-Porra
on:
  push:
    branches:
      - develop

jobs:
  job1:
    if: ${{ endsWith(github.event.head_commit.message, 'release.') }}
    name: Crear rama release desde main 
    runs-on: ubuntu-latest
    steps:
      - name: git checkout release
        uses: actions/checkout@v2
        with:
          token: ${{ github.token }}
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
      
      - name: Configuración de entorno de python
        uses: actions/setup-python@v2
        with:
            python-version: '3.9'
      
      - name: crear rama release a partir de desarrollo 
        run: |
          git checkout -b release
          git push -f -u origin release
  
  job2:
    needs: job1
    name: Merge a la rama release desde main
    runs-on: ubuntu-latest
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2

    - name: Merge desarrollo -> release
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        source-branch: main
        target-branch: release

  job3:
    needs: job2
    name: Ejecuta las pruebas en la rama release
    runs-on: ubuntu-latest
    steps:
    - name: git checkout release
      uses: actions/checkout@v2
      with:
        token: ${{ github.token }}
        ref: ${{ github.event.pull_request.head.ref }}
        fetch-depth: 0
  
    - name: Configuración de entorno de python
      uses: actions/setup-python@v2
      with:
          python-version: '3.9'

    - name: Instalación de librerías y dependencias 
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Correr pruebas unitarias release
      id: correr-pruebas-release
      run: |
      
          git checkout release
          git pull https://github.com/${{ github.repository }}/ release
          python -m unittest discover -s tests -v
          
    - name: Validar resultado con errores release
      if: ${{ failure() }}
      env:
        MENSAJE_ERROR: Una o varias pruebas fallaron
      run: echo "::set-output name=respuesta::${MENSAJE_ERROR}"

    - name: Validar resultado sin errores release
      if: ${{ success() }}
      env:
        MENSAJE_EXITO: Todas las pruebas fueron exitosas
      run: echo "::set-output name=respuesta::${MENSAJE_EXITO}"

    - name: Cálculo de cubrimiento release
      id: cubrimiento-release
      run: |
          git checkout release
          coverage run -m unittest discover -s tests -v
          coverage report -m

  job4:
    needs: job3
    name: Merge a la rama desarrollo desde release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2

    - name: Merge release -> develop
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        source-branch: release
        target-branch: develop

  job5:
    needs: job3
    name: Merge a la rama main desde release
    runs-on: ubuntu-latest
    steps:
    - name: Checkout de repositorio
      uses: actions/checkout@v2
    
    - name: Merge release -> main
      uses: tukasz/direct-merge-action@master
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        source-branch: release
        target-branch: main