version: "3.8"
services:
  backend:
    # backend
    container_name: backend
    image: backend:1
    restart: always
    env_file:
      - ./.env/entorno.env
    environment:
      SQLALCHEMY_DATABASE_URI: postgresql://postgres:postgres@service_db/service_db
    build:
      context: ./Backend 
    ports:
      - "5000:5000"
    networks:
      - broker_services_net
    depends_on:
      service_db:
        condition: service_healthy

  eventos:
    # ms eventos
    container_name: eventos
    image: eventos:1
    restart: always
    env_file:
      - ./.env/entorno.env
    environment:
      SQLALCHEMY_DATABASE_URI: postgresql://postgres:postgres@service_db/service_db
    build:
      context: ./Experimento/eventos
    ports:
      - "5001:5001"
    networks:
      - broker_services_net
    depends_on:
      service_db:
        condition: service_healthy

  apuestas:
    # ms apuestas
    container_name: apuestas
    image: apuestas:1
    restart: always
    env_file:
      - ./.env/entorno.env
    environment:
      SQLALCHEMY_DATABASE_URI: postgresql://postgres:postgres@service_db/service_db
    build:
      context: ./Experimento/ms-apuestas
    ports: 
    - '5002:5002'
    networks:
      - broker_services_net
    depends_on:
      service_db:
        condition: service_healthy

  service_db:
    # base de datos
    container_name: service_db
    env_file:
      - ./.env/entorno.env
    image: postgres:15
    ports:
      - "5432:5432"
    expose:
        - '5432'
    environment:
      POSTGRES_DB: service_db
    volumes:
      - my-db1:/var/lib/postgresql
    networks:
      - broker_services_net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER" ]
      interval: 2s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - broker_services_net
      
  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      - "9092:9092"
    expose:
        - '9092'
    depends_on:
      - zookeeper
    networks:
      - broker_services_net
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1


volumes:
  my-db1:

networks:
  broker_services_net:

